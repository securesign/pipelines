apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: operator-e2e
spec:
  description: |
    An integration test which provisions an ephemeral Hypershift cluster, deploys the operator
    bundle from a Konflux snapshot and run the e2e test suite.
  params:
    - description: Snapshot of the application
      name: SNAPSHOT
      type: string
    - description: OCP version
      name: OCP_VERSION
      type: string
      default: "4.17"
    - description: Namespace where the the Operator bundle will be deployed.
      name: NAMESPACE
      default: default
      type: string
    - description: Namespace where TAS for e2e tests will be installed
      name: TAS_E2E_NAMESPACE
      default: tas-e2e
      type: string
  tasks:
    - name: parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/securesign/pipelines.git
          - name: revision
            value: "release-1.2"
          - name: pathInRepo
            value: tasks/parse-metadata.yaml
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
    - name: provision-eaas-space
      taskRef:
        resolver: bundles
        params:
          - name: name
            value: eaas-provision-space
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-eaas-provision-space:0.1-4e4fa7355a6a51083954408e7e3b647e3bddb8d8
          - name: kind
            value: task
      params:
        - name: ownerName
          value: $(context.pipelineRun.name)
        - name: ownerUid
          value: $(context.pipelineRun.uid)
    - name: provision-cluster
      runAfter:
        - provision-eaas-space
      taskSpec:
        results:
          - name: clusterName
            value: "$(steps.create-cluster.results.clusterName)"
        steps:
          - name: pick-version
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-latest-openshift-version-by-prefix/0.1/eaas-get-latest-openshift-version-by-prefix.yaml
            params:
              - name: prefix
                value: "$(params.OCP_VERSION)"
          - name: create-cluster
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-create-ephemeral-cluster-hypershift-aws/0.1/eaas-create-ephemeral-cluster-hypershift-aws.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: version
                value: "$(steps.pick-version.results.version)"
              - name: instanceType
                value: m5.large
              - name: timeout
                value: 60m
              - name: imageContentSources
                value: |
                  - source: registry.redhat.io/rhtas/rhtas-operator-bundle
                    mirrors:
                      - quay.io/securesign/rhtas-operator-bundle
                      - quay.io/securesign/rhtas-operator-bundle-v1-0
                      - quay.io/securesign/rhtas-operator-bundle-v1-1
                      - quay.io/securesign/rhtas-operator-bundle-v1-2
                  - source: registry.redhat.io/rhtas/rhtas-rhel9-operator
                    mirrors:
                      - quay.io/securesign/rhtas-operator
                      - quay.io/securesign/rhtas-operator-v1-0
                      - quay.io/securesign/rhtas-operator-v1-1
                      - quay.io/securesign/rhtas-operator-v1-2
                  - source: registry.redhat.io/rhtas/trillian-logsigner-rhel9
                    mirrors:
                    - quay.io/securesign/trillian-logsigner
                  - source: registry.redhat.io/rhtas/trillian-logserver-rhel9
                    mirrors:
                    - quay.io/securesign/trillian-logserver
                  - source: registry.redhat.io/rhtas/trillian-database-rhel9
                    mirrors:
                    - quay.io/securesign/trillian-database
                  - source: registry.redhat.io/rhtas/fulcio-rhel9
                    mirrors:
                    - quay.io/securesign/fulcio-server
                  - source: registry.redhat.io/rhtas/trillian-redis-rhel9
                    mirrors:
                    - quay.io/securesign/trillian-redis
                  - source: registry.redhat.io/rhtas/rekor-server-rhel9
                    mirrors:
                    - quay.io/securesign/rekor-server
                  - source: registry.redhat.io/rhtas/rekor-search-ui-rhel9
                    mirrors:
                    - quay.io/securesign/rekor-search-ui
                  - source: registry.redhat.io/rhtas/rekor-backfill-redis-rhel9
                    mirrors:
                    - quay.io/securesign/rekor-backfill-redis
                  - source: registry.redhat.io/rhtas/tuf-server-rhel9
                    mirrors:
                    - quay.io/securesign/scaffold-tuf-server
                  - source: registry.redhat.io/rhtas/certificate-transparency-rhel9
                    mirrors:
                    - quay.io/securesign/certificate-transparency-go
                  - source: registry.redhat.io/rhtas/client-server-cg-rhel9
                    mirrors:
                    - quay.io/securesign/cli-client-server-cg
                  - source: registry.redhat.io/rhtas/client-server-re-rhel9
                    mirrors:
                    - quay.io/securesign/client-server-re
                  - source: registry.redhat.io/rhtas/segment-reporting-rhel9
                    mirrors:
                    - quay.io/securesign/segment-backup-job
                  - source: registry.redhat.io/rhtas/timestamp-authority-rhel9
                    mirrors:
                    - quay.io/securesign/timestamp-authority
                  - source: registry.redhat.io/rhtas/createtree-rhel9
                    mirrors:
                    - quay.io/securesign/trillian-createtree
                  - source: registry.redhat.io/rhtas/client-server-rhel9
                    mirrors:
                    - quay.io/securesign/client-server
                  - source: registry.redhat.io/rhtas/tuffer-rhel9
                    mirrors:
                    - quay.io/securesign/tuffer
    - name: install-operator-from-bundle
      runAfter:
        - provision-cluster
        - parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/securesign/pipelines.git
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/install-operator-from-bundle.yaml
      params:
        - name: eaasSpaceSecretRef
          value: $(tasks.provision-eaas-space.results.secretRef)
        - name: clusterName
          value: "$(tasks.provision-cluster.results.clusterName)"
        - name: bundleImage
          value: "$(tasks.parse-metadata.results.image)"
        - name: namespace
          value: "$(params.NAMESPACE)"
      # use CEL regexp once it moves from alpha (see https://tekton.dev/docs/pipelines/pipelines/#use-cel-expression-in-whenexpression)
      when:
        - input: "$(tasks.parse-metadata.results.component)"
          operator: in
          values: [ "rhtas-operator-bundle", "rhtas-operator-bundle-v1-1", "rhtas-operator-bundle-v1-2" ]
    - name: install-operator-from-image
      runAfter:
        - provision-cluster
        - parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/securesign/pipelines.git
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/install-operator-from-image.yaml
      params:
        - name: eaasSpaceSecretRef
          value: $(tasks.provision-eaas-space.results.secretRef)
        - name: clusterName
          value: "$(tasks.provision-cluster.results.clusterName)"
        - name: operatorImage
          value: "$(tasks.parse-metadata.results.image)"
        - name: resources_url
          value: "$(tasks.parse-metadata.results.git-url).git/config/env/openshift?ref=$(tasks.parse-metadata.results.git-revision)"
      # use CEL regexp once it moves from alpha (see https://tekton.dev/docs/pipelines/pipelines/#use-cel-expression-in-whenexpression)
      when:
        - input: "$(tasks.parse-metadata.results.component)"
          operator: in
          values: [ "rhtas-operator", "rhtas-operator-v1-1", "rhtas-operator-v1-2" ]
    - name: install-operator-from-fbc
      timeout: "0h5m0s"
      runAfter:
        - provision-cluster
        - parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/securesign/pipelines.git
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/install-operator-from-fbc.yaml
      params:
        - name: eaasSpaceSecretRef
          value: $(tasks.provision-eaas-space.results.secretRef)
        - name: clusterName
          value: "$(tasks.provision-cluster.results.clusterName)"
        - name: fbcImage
          value: "$(tasks.parse-metadata.results.image)"
        - name: namespace
          value: "$(params.NAMESPACE)"
      # replace with cel regexp once enabled https://issues.redhat.com/browse/KFLUXSPRT-1833
      when:
        - input: "$(tasks.parse-metadata.results.component)"
          operator: in
          values: [
            "fbc-v4-19", "fbc-v4-18", "fbc-v4-17", "fbc-v4-16", "fbc-v4-15",
            "fbc-v4-19-v1-2", "fbc-v4-18-v1-2", "fbc-v4-17-v1-2", "fbc-v4-16-v1-2", "fbc-v4-15-v1-2", "fbc-v4-14-v1-2",
            "fbc-v4-18-v1-1", "fbc-v4-17-v1-1", "fbc-v4-16-v1-1", "fbc-v4-15-v1-1", "fbc-v4-14-v1-1"
          ]
    - name: prepare-tests
      runAfter:
        # run after either one
        - install-operator-from-image
        - install-operator-from-bundle
        - install-operator-from-fbc
      params:
        - name: namespace
          value: "$(params.NAMESPACE)"
      taskSpec:
        results:
          - name: oidc-hostname
            value: "$(steps.install-keycloak.results.oidc-hostname)"
        volumes:
          - name: credentials
            emptyDir: { }
          - name: repository
            emptyDir: { }
          - name: binaries
            emptyDir: { }
          - name: dump
            emptyDir: { }
          - name: push-creds
            secret:
              secretName: securesign-test-dump-oci
        steps:
          - name: get-kubeconfig
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: clusterName
                value: "$(tasks.provision-cluster.results.clusterName)"
              - name: credentials
                value: credentials
          # workaround - IntegrationTest pipelines does not support workspaces ATM - it is not possible to use git-clone task
          - name: git-clone-operator
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/securesign/pipelines.git
                - name: revision
                  value: "release-1.2"
                - name: pathInRepo
                  value: stepactions/git-clone.yaml
            params:
              - name: url
                value: "$(tasks.parse-metadata.results.operator-url)"
              - name: revision
                value: "$(tasks.parse-metadata.results.operator-revision)"
              - name: repository
                value: repository
          - name: install-keycloak
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/securesign/pipelines.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/install-keycloak.yaml
            params:
              - name: credentials
                value: credentials
              - name: repository
                value: repository
              - name: KUBECONFIG
                value: "$(steps.get-kubeconfig.results.kubeconfig)"
              - name: workdir
                value: source
    - name: run-operator-e2e
      runAfter:
        - prepare-tests
      params:
        - name: namespace
          value: "$(params.NAMESPACE)"
      taskSpec:
        volumes:
          - name: credentials
            emptyDir: { }
          - name: repository
            emptyDir: { }
          - name: binaries
            emptyDir: { }
          - name: dump
            emptyDir: { }
          - name: push-creds
            secret:
              secretName: securesign-test-dump-oci
        steps:
          # workaround - IntegrationTest pipelines does not support workspaces ATM - it is not possible to use git-clone task
          - name: git-clone-operator
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/securesign/pipelines.git
                - name: revision
                  value: "release-1.2"
                - name: pathInRepo
                  value: stepactions/git-clone.yaml
            params:
              - name: url
                value: "$(tasks.parse-metadata.results.operator-url)"
              - name: revision
                value: "$(tasks.parse-metadata.results.operator-revision)"
              - name: repository
                value: repository
          - name: get-tuftool
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/securesign/pipelines.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/extract-tuftool.yaml
            params:
              - name: volume
                value: binaries
          - name: get-cosign
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/securesign/pipelines.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/extract-cosign.yaml
            params:
              - name: volume
                value: binaries
          - name: get-kubeconfig
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: clusterName
                value: "$(tasks.provision-cluster.results.clusterName)"
              - name: credentials
                value: credentials
          - name: execute-operator-e2e
            image: registry.redhat.io/ubi9/go-toolset:1.24@sha256:81d9cb51feb0b56e3d87a73c2237bebaa80b28e4d5791c1da1140eae50225e2f
            onError: continue
            results:
              - name: status
                type: string
            env:
              - name: OIDC_HOST
                value: "$(tasks.prepare-tests.results.oidc-hostname)"
              - name: KUBECONFIG
                value: "/credentials/$(steps.get-kubeconfig.results.kubeconfig)"
              - name: CI
                value: "true"
            volumeMounts:
              - name: credentials
                mountPath: /credentials
              - name: repository
                mountPath: /repository
              - name: binaries
                mountPath: /binaries
              - name: dump
                mountPath: /dump
            script: |
              #!/bin/sh
              set +e -o pipefail
              cd /repository/source
              export PATH="$PATH:/binaries"
              export OIDC_ISSUER_URL=https://$OIDC_HOST/auth/realms/trusted-artifact-signer
              openssl s_client -connect $OIDC_HOST:443 > /tmp/ssl.cert
              export SSL_CERT_FILE=/tmp/ssl.cert
              go mod vendor
              make test-e2e | tee /dump/testOutput.log
              
              if [ $? -eq 0 ]; then
                echo -n "success" > "$(step.results.status.path)"
              else
                cp test/**/k8s-dump-*.tar.gz /dump
                echo "Dumping files:"
                ls /dump
                echo -n "fail" >  "$(step.results.status.path)"
                exit 1
              fi
            securityContext:
              runAsUser: 0
          - name: secure-push-oci
            when:
              - input: "$(steps.execute-operator-e2e.results.status)"
                operator: notin
                values: [ "success" ]
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/securesign/pipelines.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/secure-push-oci.yaml
            params:
              - name: oci-ref
                value: "quay.io/securesign/test-dump-oci:$(context.pipelineRun.name)"
              - name: credentials-volume-name
                value: push-creds
              - name: artifacts-volume-name
                value: dump
              - name: oci-tag-expiration
                value: 1d
            # workaround - extract dump-push step to separate action once KONFLUX-5535 is resolved
          - name: report-status
            image: registry.redhat.io/ubi9/go-toolset:1.24@sha256:81d9cb51feb0b56e3d87a73c2237bebaa80b28e4d5791c1da1140eae50225e2f
            env:
              - name: STATUS
                value: "$(steps.execute-operator-e2e.results.status)"
            script: |
              #!/bin/bash
              if [ "$STATUS" != "success" ]; then
              echo "Test failure"
              exit 1 
              fi
    - name: run-tas-e2e
      runAfter:
        - prepare-tests
      params:
        - name: namespace
          value: "$(params.NAMESPACE)"
      taskSpec:
        volumes:
          - name: credentials
            emptyDir: { }
          - name: repository
            emptyDir: { }
          - name: binaries
            emptyDir: { }
          - name: dump
            emptyDir: { }
          - name: push-creds
            secret:
              secretName: securesign-test-dump-oci
        steps:
          - name: get-kubeconfig
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: clusterName
                value: "$(tasks.provision-cluster.results.clusterName)"
              - name: credentials
                value: credentials
          # workaround - IntegrationTest pipelines does not support workspaces ATM - it is not possible to use git-clone task
          - name: git-clone-operator
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/securesign/pipelines.git
                - name: revision
                  value: "release-1.2"
                - name: pathInRepo
                  value: stepactions/git-clone.yaml
            params:
              - name: url
                value: "$(tasks.parse-metadata.results.operator-url)"
              - name: revision
                value: "$(tasks.parse-metadata.results.operator-revision)"
              - name: repository
                value: repository
          - name: git-clone-sigstore-e2e
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/securesign/pipelines.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/git-clone.yaml
            params:
              - name: url
                value: https://github.com/securesign/sigstore-e2e
              - name: revision
                value: main
              - name: repository
                value: repository
              - name: dir
                value: sigstore-e2e
          - name: install-tas
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/securesign/pipelines.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/install-tas.yaml
            params:
              - name: credentials
                value: credentials
              - name: repository
                value: repository
              - name: KUBECONFIG
                value: "$(steps.get-kubeconfig.results.kubeconfig)"
              - name: workdir
                value: source
              - name: tas-namespace
                value: "$(params.TAS_E2E_NAMESPACE)"
              - name: OIDC_HOST
                value: "$(tasks.prepare-tests.results.oidc-hostname)"
          - name: push-test-image
            image: quay.io/konflux-ci/buildah-task:latest@sha256:cb58912cc9aecdb4c64e353ac44d0586574e89ba6cec2f2b191b4eeb98c6f81e
            results:
              - name: image
                type: string
            securityContext:
              capabilities:
                add:
                  - SETFCAP
            computeResources:
              limits:
                memory: 8Gi
              requests:
                memory: 2Gi
                cpu: '1'
            script: |
              #!/bin/sh
              IMAGE=ttl.sh/test-$(date +%Y%m%d%H%M%S%N):latest
              printf "%s" "$IMAGE" > "$(step.results.image.path)"
              buildah pull alpine:latest
              buildah tag alpine:latest $IMAGE
              buildah push $IMAGE
          - name: prepare-tas-e2e
            image: registry.redhat.io/openshift4/ose-cli
            volumeMounts:
              - name: credentials
                mountPath: /credentials
              - name: repository
                mountPath: /repository
            env:
              - name: KUBECONFIG
                value: "/credentials/$(steps.get-kubeconfig.results.kubeconfig)"
              - name: TASNAMESPACE
                value: "$(params.TAS_E2E_NAMESPACE)"
            script: |
              oc project $TASNAMESPACE
              cd /repository/sigstore-e2e
              ./tas-env-variables.sh > .env
          - name: execute-tas-e2e
            image: registry.redhat.io/ubi9/go-toolset:1.24@sha256:81d9cb51feb0b56e3d87a73c2237bebaa80b28e4d5791c1da1140eae50225e2f
            volumeMounts:
              - name: credentials
                mountPath: /credentials
              - name: repository
                mountPath: /repository
            env:
              - name: OIDC_HOST
                value: "$(tasks.prepare-tests.results.oidc-hostname)"
              - name: KUBECONFIG
                value: "/credentials/$(steps.get-kubeconfig.results.kubeconfig)"
              - name: CLI_STRATEGY
                value: "openshift"
              - name: TARGET_IMAGE_NAME
                value: "$(steps.push-test-image.results.image)"
              - name: MANUAL_IMAGE_SETUP
                value: "true"
            script: |
              set -x
              echo "Add certificate to ca-bundle.crt"
              openssl s_client -connect "$OIDC_HOST:443" -showcerts </dev/null > /tmp/ssl.cert
              sed -ni '/-----BEGIN CERTIFICATE-----/,/-----END CERTIFICATE-----/p' /tmp/ssl.cert
              cat /tmp/ssl.cert >> /etc/pki/tls/certs/ca-bundle.crt
              echo "Run tests"
              cd /repository/sigstore-e2e
              # TODO:ppinkas,jbouska - move file loading to viper
              set -o allexport && source /repository/sigstore-e2e/.env && set +o allexport
              go mod vendor
              # exclude UI and benchmark tests 
              go test -v $(go list ./test/... | grep -v rekorsearchui | grep -v benchmark) --ginkgo.v
            securityContext:
              runAsUser: 0
