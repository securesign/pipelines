apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/securesign/pipelines?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch == "main" && 
      ( ".tekton/release-pull-request.yaml".pathChanged() || "pipeline-tests/sample-release/***".pathChanged() || "pipelines/release.yaml".pathChanged() || "tasks/monitor-release.yaml".pathChanged() ||  "tasks/oc-apply.yaml".pathChanged() || "tasks/process-release-plans.yaml".pathChanged() ||  "tasks/process-releases.yaml".pathChanged() || "release-sa.yaml".pathChanged() )
    pipelinesascode.tekton.dev/pipeline: "pipelines/release.yaml"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: pipelines
    appstudio.openshift.io/component: release
    pipelines.appstudio.openshift.io/type: build
  name: release-on-pull-request
  namespace: rhtas-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: env
    value: stage
  pipelineRef:
    name: rhtas-release
  taskRunTemplate:
    serviceAccountName: rhtas-release
  taskRunSpecs:
    - pipelineTaskName: clone-repository
      serviceAccountName: appstudio-pipeline
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
