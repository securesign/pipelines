apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: install-operator-from-image
spec:
  params:
    - name: eaasSpaceSecretRef
      type: string
      description: Name of a secret containing credentials for accessing an EaaS space.
    - name: clusterName
      type: string
      description: The name of a ClusterTemplateInstance.
    - name: operatorImage
      description: Operator image to be installed
    - name: replaceImage
      description: Image name to be replaced
      default: registry.redhat.io/rhtas/rhtas-rhel9-operator
    - name: namespace
      description: Namespace to be used for installation
      default: openshift-rhtas-operator
    - name: resourcesPath
      description: Resource directory to be kustomized and applied
      default: $(workspaces.source-code.path)/config/env/openshift
    - name: deployName
      description: Deployment name
      default: rhtas-operator-controller-manager
  volumes:
    - name: credentials
      emptyDir: { }
  workspaces:
    - name: source-code
  steps:
    - name: get-kubeconfig
      ref:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/build-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
      params:
        - name: eaasSpaceSecretRef
          value: "$(params.eaasSpaceSecretRef)"
        - name: clusterName
          value: "$(params.clusterName)"
        - name: credentials
          value: credentials
    - name: kustomize-resources
      image: registry.k8s.io/kustomize/kustomize:v5.6.0
      workingDir: $(params.resourcesPath)
      script: |
        #!/bin/sh
        kustomize edit set image $(params.replaceImage)=$(params.operatorImage)
        echo "I am going to install following resources"
        kustomize build

    - name: run-operator
      image: registry.redhat.io/openshift4/ose-cli
      env:
        - name: KUBECONFIG
          value: "/credentials/$(steps.get-kubeconfig.results.kubeconfig)"
      volumeMounts:
        - name: credentials
          mountPath: /credentials
      script: |
        oc create -k $(params.resourcesPath)
        oc wait --for=condition=available deployment/$(params.deployName) --timeout=120s -n $(params.namespace)
