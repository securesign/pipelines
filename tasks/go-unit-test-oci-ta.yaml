apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: go-unit-test-oci-ta
  annotations:
    tekton.dev/title: "Go Unit Test Task"
spec:
  params:
    - description: The trusted artifact URI containing the application source code.
      name: SOURCE_ARTIFACT
      type: string
      default: ""
    - description: The Trusted Artifact URI pointing to the artifact with the prefetched dependencies.
      name: CACHI2_ARTIFACT
      type: string
      default: ""
    - description: The go command used to run the go unit test
      name: GO_TEST_COMMAND
      type: string
      default: go test ./...
    - description: The Go base image used to run the unit tests
      name: GO_BASE_IMAGE
      type: string
      default: registry.redhat.io/ubi9/go-toolset:9.6@sha256:84286c7555df503df0bd3acb86fe2ad50af82a07f35707918bb0fad312fdc193
  stepTemplate:
    volumeMounts:
      - mountPath: /var/workdir
        name: workdir
      # This path is hard coded in the cachi2.env file.
      - mountPath: /cachi2
        name: cachi2
    securityContext:
      # This is needed because the different steps in this Task run with different user IDs.
      runAsUser: 0
  steps:
    - image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:4e39fb97f4444c2946944482df47b39c5bbc195c54c6560b0647635f553ab23d
      name: use-trusted-artifact
      args:
        - use
        - $(params.SOURCE_ARTIFACT)=/var/workdir/source
        - $(params.CACHI2_ARTIFACT)=/cachi2
    - name: run-tests
      image:  $(params.GO_BASE_IMAGE)
      workingDir: /var/workdir/source
      script: |
        #!/usr/bin/env sh
        if [ -f "/cachi2/cachi2.env" ]; then
          source "/cachi2/cachi2.env"
        fi
        go mod vendor
        $(params.GO_TEST_COMMAND)
      computeResources:
        limits:
          memory: 3Gi
  volumes:
    - name: workdir
      emptyDir: {}
    - name: cachi2
      emptyDir: {}
